imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    upload_dir: %kernel.root_dir%/../upload
    liip_imagine.meta_data.reader.class: "Imagine\Image\Metadata\DefaultMetadataReader"

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    request:
        converters: true
        auto_convert: false
#    view:
#        annotations: false

liip_imagine:
    loaders:
        default:
            filesystem:
                data_root: %upload_dir%
    driver: gd
    filter_sets:
        photos_sq100:
            quality: 85
            filters:
                thumbnail: { size: [100, 100], mode: outbound }
        photos_sq200:
            quality: 85
            filters:
                thumbnail: { size: [200, 200], mode: outbound }
        photos_400x225:
            quality: 85
            filters:
                thumbnail: { size: [400, 225], mode: outbound }
        photos_800x450:
            quality: 85
            filters:
                thumbnail: { size: [800, 450], mode: outbound }

fos_rest:
    param_fetcher_listener: force
    view:
        view_response_listener: true
#        view_response_listener: force
        force_redirects:
            html: true
        formats:
            json: true
        mime_types:
            json: ['application/json', 'application/x-json', 'application/vnd.example-com.foo+json']
        templating_formats:
            html: true
#    routing_loader:
#        default_format: html
    format_listener:
        rules:
            - { path: ^/, priorities: [ json, html ], fallback_format: ~, prefer_extension: true }
    routing_loader:
        default_format: ~

nelmio_api_doc: ~

vich_uploader:
    db_driver: orm
    mappings:
        photos:
            uri_prefix: /photos
            upload_destination: %upload_dir%/photos
            namer: test_task_photos.vich_uploader.namer
            directory_namer: test_task_photos.vich_uploader.directory_namer
