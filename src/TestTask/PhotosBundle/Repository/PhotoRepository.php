<?php

namespace TestTask\PhotosBundle\Repository;

use Doctrine\ORM\EntityRepository;
use TestTask\PhotosBundle\Entity\Photo;

/**
 * PhotoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PhotoRepository extends EntityRepository
{
    public function getPhotosQb(array $tags = array())
    {
        $qb = $this->createQueryBuilder('photo');

        if ($tags) {
            $qb
                ->join('photo.photoTags', 'photoTags')
                ->andWhere('photoTags.tag IN (:tags)')
                ->setParameter('tags', $tags)
                ->groupBy('photo.id');
        }

        return $qb;
    }

    /**
     * @param Photo[] $photos
     */
    public function attachTagsToPhotos(array $photos)
    {
        if (!$photos) {
            return;
        }

        $tags = $this->_em->createQueryBuilder()
            ->select('IDENTITY(pt.photo) AS photoId, t.title')
            ->from('TestTaskPhotosBundle:PhotoTag', 'pt')
            ->join('pt.tag', 't')
            ->where('pt.photo IN (:photos)')
            ->setParameter('photos', $photos)
            ->getQuery()
            ->getResult();

        $tagsToPhotos = array();
        foreach ($tags as $tag) {
            $tagsToPhotos[$tag['photoId']][] = $tag['title'];
        }

        foreach ($photos as $photo) {
            $photo->setTagsAsArray(isset($tagsToPhotos[$photo->getId()]) ? $tagsToPhotos[$photo->getId()] : array());
        }
    }
}
