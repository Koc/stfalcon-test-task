<!DOCTYPE html>
<html class="no-js" lang="en">
<head>
    {% block head %}
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Test Task Api Sandbox</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.1.2/foundation.css">
        {#<link href='http://cdnjs.cloudflare.com/ajax/libs/foundicons/3.0.0/foundation-icons.css' rel='stylesheet'#}
        {#type='text/css'>#}

        <style type="text/css" media="screen">
            #response {
                width: 100%;
                height: 400px;
            }
        </style>
    {% endblock %}

</head>
<body ng-app="Api.Sandbox">
{% block body %}

    <div class="top-bar">
        <div class="top-bar-left">
            <ul class="menu">
                {#<li class="menu-text">Blog</li>#}
                <li><a href="{{ path('nelmio_api_doc_index') }}">Документация API</a></li>
                <li><a href="{{ path('test_task_api_sandbox', {'api_method': 'post_photo'}) }}">Загрузка фото</a></li>
                <li><a href="{{ path('test_task_api_sandbox', {'api_method': 'post_tags_to_photo'}) }}">Добавление тегов
                        к фото</a></li>
                <li><a href="{{ path('test_task_api_sandbox', {'api_method': 'delete_tags'}) }}">Удаление тегов</a></li>
                <li><a href="{{ path('test_task_api_sandbox', {'api_method': 'delete_photo'}) }}">Удаление фото</a></li>
                <li><a href="{{ path('test_task_api_sandbox', {'api_method': 'get_photos'}) }}">Вывод фото с пагинацией
                        и возможностью фильтрации по тегам</a>
                <li><a href="{{ path('get_photos') }}">Вывод фото с пагинацией и возможностью фильтрации по тегам</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="row medium-8 large-7 columns">
        <form name="requestForm" ng-controller="Api.Sandbox.SandboxController as sandboxController">

            <input type="hidden" ng-model="requestMethod" value="{{ config.method }}" initial-value />
            <input type="hidden" ng-model="requestUri" value="{{ app.request.getUriForPath(config.uri) }}"
                   initial-value />

            <table>
                <thead>
                <tr>
                    <th width="200px">Параметр</th>
                    <th width="400px">Значение</th>
                </tr>
                </thead>
                <tbody>

                {% block request_params %}
                    <tr>
                        <td>
                            Uri:
                        </td>
                        <td>
                            {{ config.uri }}
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Method:
                        </td>
                        <td>
                            {{ config.method }}
                        </td>
                    </tr>

                    {% if config.params|length %}
                        <tr>
                            <td colspan="2" class="text-center">
                                <h4 class="subheader">Параметры запроса</h4>
                            </td>
                        </tr>
                    {% endif %}

                    {% for fieldName, field in config.params %}
                        {% set required = field.required is defined ? field.required : false %}

                        <tr>
                            <td>
                                {{ field.label }}{% if required %}*{% endif %}:
                            </td>
                            <td>
                                <input type="text" ng-model="params.{{- fieldName -}}"
                                       {% if required %}required="required" {% endif %} />

                            </td>
                        </tr>
                    {% endfor %}

                    {% if config.fields|length %}
                        <tr>
                            <td colspan="2" class="text-center">
                                <h4 class="subheader">Поля запроса</h4>
                            </td>
                        </tr>
                    {% endif %}

                    {% for fieldName, field in config.fields %}
                        {% set multiple = field.multiple|default(false) %}
                        {% set required = field.required is defined ? field.required : false %}

                        <tr>
                            <td>
                                {{ field.label }}{% if required %}*{% endif %}:
                            </td>
                            <td>
                                {% if field.type|default('text') == 'file' %}
                                    <input type="file" file-model="request.{{- fieldName -}}"
                                           {% if required %}required="required" {% endif %} />
                                {% else %}
                                    <input type="text" ng-model="request.{{- fieldName -}}"
                                           {% if required %}required="required" {% endif %} {% if multiple %}ng-list=","{% endif %} />
                                    {% if multiple %}
                                        <p class="help-text">Можно вводить несколько значений через запятую.</p>
                                    {% endif %}
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                {% endblock %}

                <tr>
                    <td colspan="2">
                        <input type="submit" ng-click="sandboxController.sendRequest()"
                               ng-class="{'secondary' : requestSubmitting, 'success': !requestSubmitting}"
                               ng-disabled="requestSubmitting || !requestForm.$valid"
                               value="send" class="button" />
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        <div id="response"></div>
                    </td>

                </tr>

                </tbody>
            </table>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.1.2/foundation.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/ace.js" type="text/javascript"
            charset="utf-8"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular.js"></script>
    <script src="//cdn.jsdelivr.net/angular.initial-value/latest/angular-initial-value.min.js"></script>

    <script>
        $(document).foundation();

        var editor = ace.edit('response');
        editor.setTheme('ace/theme/twilight');
        editor.getSession().setMode('ace/mode/json');

        String.prototype.format = function (o) {
            return this.replace(/{([^{}]*)}/g,
                    function (a, b) {
                        var r = o[b];

                        return typeof r === 'string' ? r : a;
                    }
            );
        };

        angular.module('Api.Sandbox', ['initialValue'])
                .directive('fileModel', ['$parse', function ($parse) {
                    return {
                        restrict: 'A',
                        link: function (scope, element, attrs) {
                            element.bind('change', function () {
                                $parse(attrs.fileModel).assign(scope, element[0].files);
                                scope.$apply();
                            });
                        }
                    };
                }])
                .controller('Api.Sandbox.SandboxController', ['$scope', '$http', function ($scope, $http) {
                    $scope.requestSubmitting = false;

                    this.sendRequest = function () {
                        $scope.requestSubmitting = true;

                        var requestUri = $scope.requestUri.trim();
                        var requestMethod = $scope.requestMethod.trim();

                        if ($scope.params) {
                            requestUri = requestUri.format($scope.params);
                        }

                        var requestConfig = {
                            method: requestMethod,
                            url: requestUri,
                            params: {},
                            data: new FormData(),
                            transformRequest: angular.identity,
                            headers: {'Content-Type': undefined}
                        };

                        if ($scope.request) {
                            if (requestMethod === 'GET') {
                                angular.forEach($scope.request, function (value, key) {
                                    if (angular.isArray(value)) {
                                        key += '[]';
                                    }
                                    requestConfig.params[key] = value;
                                });
                            } else {
                                angular.forEach($scope.request, function (value, key) {
                                    if (value instanceof FileList) {
                                        angular.forEach(value, function (file) {
                                            requestConfig.data.append(key, file);
                                        });
                                    } else if (value instanceof Array) {
                                        angular.forEach(value, function (file) {
                                            requestConfig.data.append(key + '[]', file);
                                        });
                                    } else {
                                        requestConfig.data.append(key, value);
                                    }
                                });
                            }
                        }

                        $http(requestConfig)
                                .then(function successCallback(response) {
                                    editor.setValue(JSON.stringify(response.data, null, 4), -1);
                                    $scope.requestSubmitting = false;
                                }, function errorCallback(response) {
                                    editor.setValue(JSON.stringify(response.data, null, 4), -1);
                                    $scope.requestSubmitting = false;
                                });
                    }
                }]);
    </script>
{% endblock body %}
</body>
</html>
